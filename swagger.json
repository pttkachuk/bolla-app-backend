
{
  "openapi": "3.0.0",
  "info": {
    "title": "Bolla App API",
    "description": "API dosumentation for Bolla App",
    "version": "1.0.0",
    "license":{
            "name": "MIT",
            "url": "https://spdx.org/licenses/MIT.html"
        },
           "contact":{
            "name":"Bolla App",
            "url": "http://bolla-app.com",
            "email":"petrotkachuk6@gmail.com"
        }
  },
   "servers":[
       {
           "url":"https://bolla-app-7rgy.onrender.com/api"
       },
        {
            "url": "http://localhost:4000/api"
        }
    ], 
    "tags":[
        {
            "name": "Auth",
            "description":"Authorization endpoints"
        }
    ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags":["Auth"],
        "summary": "User registration",
        "requestBody":{
                    "description":"Registration's object",
                    "required": true,
                    "content":{
                        "application/json":{
                            "schema":{
                                "$ref":"#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref":"#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
           "400":{
                    "description":"Bad request (invalid request body)"
                },
            "409":{
                    "description":"Provided email alredy exists"
                }
        }
      }
    },
    "/auth/login":{
        "post":{
            "tags":["Auth"],
            "summary":"User login",
            "requestBody":{
                "description":"Login object",
                "required":true,
                "content":{
                    "application/json":{
                        "schema":{
                            "$ref":"#/components/schemas/LoginRequest"
                        }
                    }
                }
            },
            "responses":{
                "200":{
                    "description":"Successful operation",
                    "content":{
                        "application/json":{
                            "schema":{
                                "$ref":"#/components/schemas/LoginResponse"
                            }
                        }
                    }
                },
                "400":{
                    "description":"Bad request (invalid request body)"
                },
                "409":{
                    "description":"Login doesn't exist/Password is wrong"
                }
            }
        }
    },
    "/auth/logout":{
        "post":{
            "tags":["Auth"],
            "summary":"User logout",
            "security":[{"Bearer":[]}],
             "requestBody":{
                "description":"Logout object",
                "required":true,
                "content":{
                    "application/json":{
                        "schema":{
                            "$ref":"#/components/schemas/LogoutRequest"
                        }
                    }
                }
            },
            "responses":{
                "204":{
                    "description":"Successful operation",
                    "content":{
                         "application/json":{
                            "schema":{
                                "$ref":"#/components/schemas/LogoutResponse"
                            }
                        }
                    }
                },
                "400":{
                    "description":"No token provided"
                },
                "401":{
                    "description":"Unauthorized (invalid acces token)"
                },
                "404":{
                    "description":"Invalid user / Invalid session"
                }
            }
        }
    },
     "/auth/current":{
        "get":{
            "tags":["Auth"],
            "summary":"Current user info",
            "security":[{"Bearer":[]}],
            "responses":{
                "200":{
                    "description":"Successful operation",
                    "content":{
                        "application/json":{
                            "schema":{
                                "$ref":"#/components/schemas/GetUserCurrentResponse"
                            }
                        }
                    }
                },
                "400":{
                    "description":"No token provided"
                },
                "401":{
                    "description":"Unauthorized (invalid acces token)"
                },
                "404":{
                    "description":"Invalid user / Invalid session"
                }
            }
        }
    },
    "/auth/resetPassword":{
        "patch":{
            "tags":["Auth"],
            "summary":"Reset user's password",
            "requestBody":{
                "description":"Reset Password object",
                "required":true,
                "content":{
                    "application/json":{
                        "schema":{
                            "$ref":"#/components/schemas/ResetPasswordRequest"
                        }
                    }
                }
            },
            "responses":{
                "200":{
                    "description":"Successful operation",
                    "content":{
                        "application/json":{
                            "schema":{
                                "$ref":"#/components/schemas/ResetPasswordResponse"
                            }
                        }
                    }
                },
                "400":{
                    "description":"Bad request (invalid request body)"
                },
                "409":{
                    "description":"Login doesn't exist/Password is invalid"
                }
            }
        }
    }
  },
  "components":{
    "schemas":{
        "RegistrationRequest":{
            "required":["name", "login", "password"],
            "type":"object",
            "properties":{
                "name":{
                    "$ref":"#/components/examples/user/name"
                },
                "login":{
                    "$ref":"#/components/examples/user/login"
                },
                "password":{
                    "$ref":"#/components/examples/user/password"
                }
            }
        },
        "RegistrationResponse":{
            "type":"object",
            "properties":{
                "name":{
                    "$ref":"#/components/examples/user/name"
                },
                "login":{
                    "$ref":"#/components/examples/user/login"
                }
            }
        },
        "LoginRequest":{
            "required":["login","password"],
            "type":"object",
            "properties":{
                "login":{
                    "$ref":"#/components/examples/user/login"
                },
                "password":{
                    "$ref":"#/components/examples/user/password"
                }
            }
        },
        "LoginResponse":{
            "type":"object",
            "properties":{
                "login":{
                    "$ref":"#/components/examples/user/login"
                },
                "name":{
                    "$ref":"#/components/examples/user/name"
                },
                "token":{
                    "$ref":"#/components/examples/user/token"
                }
            }
        },
         "LogoutRequest":{
            "required":["login","password"],
            "type":"object",
            "properties":{
                "login":{
                    "$ref":"#/components/examples/user/login"
                },
                "password":{
                    "$ref":"#/components/examples/user/password"
                }
            }
        },
        "LogoutResponse":{
            "type":"object",
            "properties":{
                "message":{
                    "$ref":"#/components/examples/user/logout"
                }
            }
        },
        "GetUserCurrentResponse":{
            "type":"object",
            "properties":{
                "name":{
                    "$ref":"#/components/examples/user/name"
                },
                "login":{
                    "$ref":"#/components/examples/user/login"
                }
            }
        },
        "ResetPasswordRequest":{
            "required":["login","password"],
            "type":"object",
            "properties":{
                "login":{
                    "$ref":"#/components/examples/user/login"
                },
                "password":{
                    "$ref":"#/components/examples/user/password"
                }
            }
        },
        "ResetPasswordResponse":{
             "type":"object",
            "properties":{
                "message":{
                    "$ref":"#/components/examples/user/resetpassword"
                }
            }
        }
    },
    "examples":{
        "user":{
            "userId":{
                "type":"string",
                "description":"User's id",
                "example":"js98d7f0a7d6f8as79a87f69"
            },
            "name":{
                "type":"string",
                "description": "Users's name",
                "example": "User Example",
                "minLength": 3,
                "maxLength": 50
            },
            "login":{
                "type":"string",
                "description": "Users's login",
                "example":"User.Login",
                "minLength": 3,
                "maxLength": 50
            },
            "password":{
                "type":"string",
                "description": "Users's password",
                "example": "examplepass1337",
                "minLength": 9,
                "maxLength": 30
            },
            "token":{
                "type":"string",
                "description": "Auth token",
                "example":"q098nq9wyr0cqwenczxf09g8a.nsa0sdnf"
            },
            "logout":{
                "type":"string",
                "description": "User logout",
                "example":"Logout success"
            },
            "resetpassword":{
                "type":"string",
                "description": "Reset user's password",
                "example":"Password reset with success"
            }
        }
    }
  }
}